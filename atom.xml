<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>丧丧的blog</title>
  
  <subtitle>很丧很丧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ccblog.club/"/>
  <updated>2019-11-01T02:26:50.770Z</updated>
  <id>http://ccblog.club/</id>
  
  <author>
    <name>cc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ts的函数继承与类的修饰符</title>
    <link href="http://ccblog.club/2019/11/01/ts%E7%9A%84%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF%E4%B8%8E%E7%B1%BB%E7%9A%84%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
    <id>http://ccblog.club/2019/11/01/ts的函数继承与类的修饰符/</id>
    <published>2019-11-01T01:58:31.000Z</published>
    <updated>2019-11-01T02:26:50.770Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，ts的继承"><a href="#一，ts的继承" class="headerlink" title="一，ts的继承"></a>一，ts的继承</h4><p> ts的基本依靠于extends和super分别获取到类的类型和类名从而继承</p><a id="more"></a><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Person&#123;</span><br><span class="line">    name:<span class="built_in">string</span></span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name</span><br><span class="line">    &#125;</span><br><span class="line">    run():<span class="built_in">string</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>+"在锻炼"`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//创建一个类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Web <span class="keyword">extends</span> Person&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">super</span>(name)</span><br><span class="line">    &#125;</span><br><span class="line">   work():<span class="built_in">string</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>+"在工作"`</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二，类的修饰符"><a href="#二，类的修饰符" class="headerlink" title="二，类的修饰符"></a>二，类的修饰符</h4><p>ts关于类的修饰符分为三种，用于指定类名的公开程度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">public 公开，类和子类和外部都可以使用</span><br><span class="line">protected 保护，只有类和子类能使用</span><br><span class="line">private 私有，仅有类本身可以使用</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h6 id="个人觉得typescript的学习知识让你更好的认识到js的一些不足并能够让自己可以意识到这些问题。如今的开发中应用较多的mvc和mvvm甚至是微信小程序的模式（十分类似于基于vue的mvvm）一个主要依靠于jqeury一个依靠于vue，两者都不是基于typescript的，可能当ts的库和更多的框架出现时会逐渐的优于js吧。"><a href="#个人觉得typescript的学习知识让你更好的认识到js的一些不足并能够让自己可以意识到这些问题。如今的开发中应用较多的mvc和mvvm甚至是微信小程序的模式（十分类似于基于vue的mvvm）一个主要依靠于jqeury一个依靠于vue，两者都不是基于typescript的，可能当ts的库和更多的框架出现时会逐渐的优于js吧。" class="headerlink" title="个人觉得typescript的学习知识让你更好的认识到js的一些不足并能够让自己可以意识到这些问题。如今的开发中应用较多的mvc和mvvm甚至是微信小程序的模式（十分类似于基于vue的mvvm）一个主要依靠于jqeury一个依靠于vue，两者都不是基于typescript的，可能当ts的库和更多的框架出现时会逐渐的优于js吧。"></a>个人觉得typescript的学习知识让你更好的认识到js的一些不足并能够让自己可以意识到这些问题。如今的开发中应用较多的mvc和mvvm甚至是微信小程序的模式（十分类似于基于vue的mvvm）一个主要依靠于jqeury一个依靠于vue，两者都不是基于typescript的，可能当ts的库和更多的框架出现时会逐渐的优于js吧。</h6>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一，ts的继承&quot;&gt;&lt;a href=&quot;#一，ts的继承&quot; class=&quot;headerlink&quot; title=&quot;一，ts的继承&quot;&gt;&lt;/a&gt;一，ts的继承&lt;/h4&gt;&lt;p&gt; ts的基本依靠于extends和super分别获取到类的类型和类名从而继承&lt;/p&gt;
    
    </summary>
    
    
      <category term="-前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="typescript" scheme="http://ccblog.club/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>ts的函数</title>
    <link href="http://ccblog.club/2019/11/01/ts%E7%9A%84%E5%87%BD%E6%95%B0/"/>
    <id>http://ccblog.club/2019/11/01/ts的函数/</id>
    <published>2019-11-01T00:37:43.000Z</published>
    <updated>2019-11-01T00:50:49.645Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-定义函数的方式"><a href="#一-定义函数的方式" class="headerlink" title="一, 定义函数的方式"></a>一, 定义函数的方式</h4><h6 id="1，函数声明"><a href="#1，函数声明" class="headerlink" title="1，函数声明"></a>1，函数声明</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function run():string &#123;</span><br><span class="line">return &quot;run&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="2-匿名函数"><a href="#2-匿名函数" class="headerlink" title="2,  匿名函数"></a>2,  匿名函数</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var run = function():string &#123;</span><br><span class="line">return &quot;run&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二，函数传参"><a href="#二，函数传参" class="headerlink" title="二，函数传参"></a>二，函数传参</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//声明</span><br><span class="line">function getinfo(name:string,age:number)&#123;</span><br><span class="line">return `$&#123;name&#125;-----$&#123;age&#125;`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alert(getinfo(&apos;张三&apos;),18)</span><br><span class="line"></span><br><span class="line">//匿名</span><br><span class="line">var getinfo = function(name:string,age:number)&#123;</span><br><span class="line">return `$&#123;name&#125;-----$&#123;age&#125;`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三，-可选参数"><a href="#三，-可选参数" class="headerlink" title="三， 可选参数"></a>三， 可选参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function getinfo(name:string,age?:number)&#123;</span><br><span class="line">return `$&#123;name&#125;`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//可选参数放置于后面</span><br></pre></td></tr></table></figure><h4 id="四，默认参数"><a href="#四，默认参数" class="headerlink" title="四，默认参数"></a>四，默认参数</h4><h4 id="五，剩余参数"><a href="#五，剩余参数" class="headerlink" title="五，剩余参数"></a>五，剩余参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function sum(1,2,...result):number&#123;</span><br><span class="line">var sum = 0</span><br><span class="line">for(var i=0,i&lt;result.length,i++)&#123;</span><br><span class="line">sum += result[i]</span><br><span class="line">&#125;</span><br><span class="line">return sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alert(sum(1,2,3,4,5))</span><br></pre></td></tr></table></figure><h4 id="六，函数重载"><a href="#六，函数重载" class="headerlink" title="六，函数重载"></a>六，函数重载</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一-定义函数的方式&quot;&gt;&lt;a href=&quot;#一-定义函数的方式&quot; class=&quot;headerlink&quot; title=&quot;一, 定义函数的方式&quot;&gt;&lt;/a&gt;一, 定义函数的方式&lt;/h4&gt;&lt;h6 id=&quot;1，函数声明&quot;&gt;&lt;a href=&quot;#1，函数声明&quot; class=&quot;headerlink&quot; title=&quot;1，函数声明&quot;&gt;&lt;/a&gt;1，函数声明&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function run():string &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;quot;run&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="-前" scheme="http://ccblog.club/categories/%E5%89%8D/"/>
    
    
      <category term="typescript" scheme="http://ccblog.club/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>ts在vscode的配置以及其数据类型</title>
    <link href="http://ccblog.club/2019/10/31/ts%E5%9C%A8vscode%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://ccblog.club/2019/10/31/ts在vscode的配置以及其数据类型/</id>
    <published>2019-10-31T07:10:00.000Z</published>
    <updated>2019-10-31T07:35:49.501Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，配置vscode"><a href="#一，配置vscode" class="headerlink" title="一，配置vscode"></a>一，配置vscode</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//终端</span><br><span class="line">tsc init //获取配置文件</span><br><span class="line"></span><br><span class="line">//tsconfig.json</span><br><span class="line">//打开outDir 设置js文件生成的默认路径</span><br><span class="line">//打开 &quot;experimentalDecorators&quot;: true使ts支持es7语法</span><br></pre></td></tr></table></figure><a id="more"></a><p>之后再终端(T)中开启监听任务，则每次保存ts文件都会转化成js</p><h4 id="二，-ts的数据类型"><a href="#二，-ts的数据类型" class="headerlink" title="二， ts的数据类型"></a>二， ts的数据类型</h4><p>ts对于数据类型的定义比js严格的多，在通过var定义时(const和let也可以规定，但是因为他们的唯一性应该不需要设定)，一旦规定数据类型，下之后代码中更改变量若不为相同类型会产生报错</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str:<span class="built_in">string</span> = <span class="string">'admin'</span></span><br><span class="line"><span class="comment">//之后的str只能为字符串</span></span><br></pre></td></tr></table></figure><h6 id="ts的数据类型有String-Number-Array-Boolean-Tuple-enum-any-null-undefinded-never-void"><a href="#ts的数据类型有String-Number-Array-Boolean-Tuple-enum-any-null-undefinded-never-void" class="headerlink" title="ts的数据类型有String,Number,Array,Boolean,Tuple,enum,any,null,undefinded,never,void"></a>ts的数据类型有String,Number,Array,Boolean,Tuple,enum,any,null,undefinded,never,void</h6><h6 id="想比较与javascript-少了object对象，多出了tuple元组类型，any任意类型，enum枚举类型，never类型和void类型"><a href="#想比较与javascript-少了object对象，多出了tuple元组类型，any任意类型，enum枚举类型，never类型和void类型" class="headerlink" title="想比较与javascript,少了object对象，多出了tuple元组类型，any任意类型，enum枚举类型，never类型和void类型"></a>想比较与javascript,少了object对象，多出了tuple元组类型，any任意类型，enum枚举类型，never类型和void类型</h6><h5 id="1，tuple"><a href="#1，tuple" class="headerlink" title="1，tuple"></a>1，tuple</h5><p>元组类型属于数组，是拥有多个数据类型的数组，因为在ts中严格规定的arrary的数据类型，当有多重类型时可以使用元组，但是规定的类型数量必须和数组内元素数量相同</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr:[<span class="built_in">number</span>,<span class="built_in">string</span>] = [<span class="number">1</span>,<span class="string">'1'</span>]</span><br></pre></td></tr></table></figure><h5 id="2-any"><a href="#2-any" class="headerlink" title="2,any"></a>2,any</h5><p>any类型可以适用于所有的类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a:any = [1,2,4,&quot;2121&quot;]</span><br></pre></td></tr></table></figure><h5 id="3-enum"><a href="#3-enum" class="headerlink" title="3,enum"></a>3,enum</h5><p>枚举类型用于将特定的时间变为数字下标来表示</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> Err &#123;<span class="string">"undefinded"</span>==<span class="number">-1</span>,<span class="string">'unll'</span>==<span class="number">-2</span>,<span class="string">'success'</span>=<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">const</span> U:Err = Err[<span class="string">'undefinded'</span>]</span><br><span class="line">consoloe.log(U) <span class="comment">// -1</span></span><br><span class="line"><span class="comment">//当没有规定数字时默认为从0开始的下标</span></span><br></pre></td></tr></table></figure><h5 id="4，void"><a href="#4，void" class="headerlink" title="4，void"></a>4，void</h5><p>void用于规定没有返回的函数</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>):<span class="title">void</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'run'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-never"><a href="#5-never" class="headerlink" title="5, never"></a>5, never</h5><p>never基本可以使用any代替，用于表示其他数据</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'err'</span>)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一，配置vscode&quot;&gt;&lt;a href=&quot;#一，配置vscode&quot; class=&quot;headerlink&quot; title=&quot;一，配置vscode&quot;&gt;&lt;/a&gt;一，配置vscode&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//终端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tsc init //获取配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//tsconfig.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//打开outDir 设置js文件生成的默认路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//打开 &amp;quot;experimentalDecorators&amp;quot;: true使ts支持es7语法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="-前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="tpyescript" scheme="http://ccblog.club/tags/tpyescript/"/>
    
  </entry>
  
  <entry>
    <title>vuex相关</title>
    <link href="http://ccblog.club/2019/10/24/vuex%E7%9B%B8%E5%85%B3/"/>
    <id>http://ccblog.club/2019/10/24/vuex相关/</id>
    <published>2019-10-24T02:42:10.000Z</published>
    <updated>2019-10-24T03:13:55.343Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，-vuex引入使用"><a href="#一，-vuex引入使用" class="headerlink" title="一， vuex引入使用"></a>一， vuex引入使用</h4><p>引入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vuex</span><br></pre></td></tr></table></figure><p>在src目录下新建store文件夹</p><a id="more"></a><p>在文件夹中创建</p><p>index.js //主文件</p><p>state.js // 状态文件</p><p>getters.js // 计算属性文件</p><p>mutations.js // 状态事件文件</p><p>actions.js // 更变状态文件(可异步)</p><p>main.js中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import store from &apos;./store&apos;</span><br><span class="line"></span><br><span class="line">components:&#123;store&#125;</span><br></pre></td></tr></table></figure><p>index.js中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Vuex from &apos;vuex&apos;</span><br><span class="line"></span><br><span class="line">import state from &apos;./state&apos;</span><br><span class="line">import mutations from &apos;./mutations&apos;</span><br><span class="line">import actions from &apos;./actions&apos;</span><br><span class="line">import getters from &apos;./getters&apos;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">state,</span><br><span class="line">mutations,</span><br><span class="line">actions,</span><br><span class="line">getters</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>其他四个js中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export default(&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一，-vuex引入使用&quot;&gt;&lt;a href=&quot;#一，-vuex引入使用&quot; class=&quot;headerlink&quot; title=&quot;一， vuex引入使用&quot;&gt;&lt;/a&gt;一， vuex引入使用&lt;/h4&gt;&lt;p&gt;引入&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i vuex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在src目录下新建store文件夹&lt;/p&gt;
    
    </summary>
    
    
      <category term="-前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vuex" scheme="http://ccblog.club/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>express配置</title>
    <link href="http://ccblog.club/2019/10/19/express%E9%85%8D%E7%BD%AE/"/>
    <id>http://ccblog.club/2019/10/19/express配置/</id>
    <published>2019-10-19T04:02:13.000Z</published>
    <updated>2019-10-19T04:08:24.467Z</updated>
    
    <content type="html"><![CDATA[<h6 id="通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express"><a href="#通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express" class="headerlink" title="通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express"></a>通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express</h6><a id="more"></a><p>app.js </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&apos;express&apos;)</span><br><span class="line">var app = express()</span><br><span class="line">var router = require(&apos;./router&apos;)</span><br><span class="line">var bodyParser = require(&apos;body-parser&apos;)</span><br><span class="line">var path = require(&apos;path&apos;)</span><br><span class="line">var session = require(&apos;express-session&apos;)</span><br><span class="line">const MongoStore = require(&apos;connect-mongo&apos;)(session)</span><br><span class="line"></span><br><span class="line">app.use(&apos;/node_modules/&apos;, express.static(path.join(__dirname, &apos;./node_modules/&apos;)))</span><br><span class="line">app.use(session(&#123;</span><br><span class="line">  secret: &apos;keyboard cat&apos;,</span><br><span class="line">  resave: false,</span><br><span class="line">  saveUninitialized: true,</span><br><span class="line">  rolling: true,</span><br><span class="line">  cookie: &#123;</span><br><span class="line">    maxAge: 1000 * 60 * 60 * 24</span><br><span class="line">  &#125;,</span><br><span class="line">  store: new MongoStore(&#123;</span><br><span class="line">    url: &quot;mongodb://localhost/device&quot;,</span><br><span class="line">    touchAfter: 24 * 3600</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">app.use(&apos;/node_modules/&apos;, express.static(path.join(__dirname, &apos;./node_modules/&apos;)))</span><br><span class="line">app.use(&apos;/public/&apos;, express.static(path.join(__dirname, &apos;./public/&apos;)))</span><br><span class="line">app.use(bodyParser.urlencoded(&#123; extended: false &#125;))</span><br><span class="line">app.use(bodyParser.json())</span><br><span class="line">app.use(router)</span><br><span class="line">app.use(function (req, res) &#123;</span><br><span class="line">  res.render(&apos;404.html&apos;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(3000, function () &#123;</span><br><span class="line">  console.log(&quot;监听成功&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>router.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&quot;express&quot;)</span><br><span class="line">var router = express.Router()</span><br><span class="line"></span><br><span class="line">module.exports = router</span><br></pre></td></tr></table></figure><h6 id="后台只要这些配置，至于是做前后端不分离的mvc还是分离的mvvm的配置看需要再加减"><a href="#后台只要这些配置，至于是做前后端不分离的mvc还是分离的mvvm的配置看需要再加减" class="headerlink" title="后台只要这些配置，至于是做前后端不分离的mvc还是分离的mvvm的配置看需要再加减"></a>后台只要这些配置，至于是做前后端不分离的mvc还是分离的mvvm的配置看需要再加减</h6>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express&quot;&gt;&lt;a href=&quot;#通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express&quot; class=&quot;headerlink&quot; title=&quot;通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express&quot;&gt;&lt;/a&gt;通过express自带的模板创建带有许多基本上用不到的功能，不如自己配置一个简单易懂的express&lt;/h6&gt;
    
    </summary>
    
    
      <category term="-前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="express -nodejs" scheme="http://ccblog.club/tags/express-nodejs/"/>
    
  </entry>
  
  <entry>
    <title>vue项目的坑</title>
    <link href="http://ccblog.club/2019/10/19/vue%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%9D%91/"/>
    <id>http://ccblog.club/2019/10/19/vue项目的坑/</id>
    <published>2019-10-19T03:57:55.000Z</published>
    <updated>2019-10-29T02:28:22.851Z</updated>
    
    <content type="html"><![CDATA[<h6 id="想到一点写一点"><a href="#想到一点写一点" class="headerlink" title="想到一点写一点"></a>想到一点写一点</h6><h4 id="一，-关于路由懒加载"><a href="#一，-关于路由懒加载" class="headerlink" title="一， 关于路由懒加载"></a>一， 关于路由懒加载</h4><p>​        由于mvvm的特性页面的路由转换不会触发页面的跳转，因此在vue-cli项目完成时他的app.js文件会特别庞大，这对于小型服务器的加载是致命问题，路由的懒加载可以让app.js的读取舍弃未用到的路由组件，当用到的时候再加载</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  routes:[</span><br><span class="line">    &#123;</span><br><span class="line">     path: &apos;/my&apos;,</span><br><span class="line">     name: &apos;my&apos;,</span><br><span class="line">      //懒加载</span><br><span class="line">     component: resolve =&gt; require([&apos;../page/my/my.vue&apos;], resolve),</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>​    </p><h4 id="二，-引入多个ui组件"><a href="#二，-引入多个ui组件" class="headerlink" title="二， 引入多个ui组件"></a>二， 引入多个ui组件</h4><p>​        尽管类似于mint-ui这样的过气组件现在用处不是很大，但是有一些独有的特性还是会用得到，因此要要在一个vue项目中会用到element-ui,bootstrap,mint-ui等多个组件</p><p>​        建议全部都按需引用</p><h6 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Tabbar, TabItem, Header &#125; from &apos;mint-ui&apos;;</span><br><span class="line">import &#123; Input &#125; from &apos;element-ui&apos;</span><br><span class="line"></span><br><span class="line">Vue.component(Input.name, Input)</span><br><span class="line">Vue.component(Header.name, Header)</span><br><span class="line">Vue.component(Tabbar.name, Tabbar);</span><br><span class="line">Vue.component(TabItem.name, TabItem);</span><br></pre></td></tr></table></figure><h6 id="babeirc"><a href="#babeirc" class="headerlink" title=".babeirc"></a>.babeirc</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;es2015&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;modules&quot;: false</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  &quot;plugins&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;component&quot;,</span><br><span class="line">      [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;libraryName&quot;: &quot;mint-ui&quot;,</span><br><span class="line">          &quot;style&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;libraryName&quot;: &quot;element-ui&quot;,</span><br><span class="line">          &quot;styleLibraryName&quot;: &quot;theme-chalk&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三，-axios引用方法"><a href="#三，-axios引用方法" class="headerlink" title="三， axios引用方法"></a>三， axios引用方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import axios from &apos;axios&apos;</span><br><span class="line">Vue.prototype.axios = axios</span><br><span class="line">//全局引用后可以在全局通过this.axios调用</span><br><span class="line"></span><br><span class="line">//若在但组件内import</span><br><span class="line">//可在该组件之间用axios</span><br></pre></td></tr></table></figure><h4 id="四，-兄弟组件传值"><a href="#四，-兄弟组件传值" class="headerlink" title="四， 兄弟组件传值"></a>四， 兄弟组件传值</h4><p>原生vue中兄弟组件传值要通过父组件做中间件再传值非常麻烦，这里用pubsub可以很好解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm i pubsub-js</span><br><span class="line"></span><br><span class="line">import PubSub from &apos;pubsub-js/src/pubsub&apos;</span><br><span class="line">Vue.use(PubSub)</span><br></pre></td></tr></table></figure><h6 id="兄弟组件a"><a href="#兄弟组件a" class="headerlink" title="兄弟组件a"></a>兄弟组件a</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PubSub.publish(&apos;setmsg&apos;,data) //发布文件</span><br></pre></td></tr></table></figure><h6 id="兄弟组件b"><a href="#兄弟组件b" class="headerlink" title="兄弟组件b"></a>兄弟组件b</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PubSub.subscribe(&apos;getmsg&apos;,msg)//订阅文件  此时msg的值就是data</span><br></pre></td></tr></table></figure><h4 id="五，-主界面问题"><a href="#五，-主界面问题" class="headerlink" title="五， 主界面问题"></a>五， 主界面问题</h4><h6 id="方法一大堆不写了"><a href="#方法一大堆不写了" class="headerlink" title="方法一大堆不写了"></a>方法一大堆不写了</h6><h4 id="六，-移动端的自适应"><a href="#六，-移动端的自适应" class="headerlink" title="六， 移动端的自适应"></a>六， 移动端的自适应</h4><p>终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i lib-flexible --save</span><br><span class="line"></span><br><span class="line">npm install px2rem-loader</span><br></pre></td></tr></table></figure><p>main.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &apos;lib-flexible/flexible&apos;</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>until.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const px2remLoader = &#123;</span><br><span class="line">loader:&apos;px2rem-loader&apos;</span><br><span class="line">options:&#123;</span><br><span class="line">remUnit:75</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//在generateLoaders中</span><br><span class="line">const loaders = options................</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;想到一点写一点&quot;&gt;&lt;a href=&quot;#想到一点写一点&quot; class=&quot;headerlink&quot; title=&quot;想到一点写一点&quot;&gt;&lt;/a&gt;想到一点写一点&lt;/h6&gt;&lt;h4 id=&quot;一，-关于路由懒加载&quot;&gt;&lt;a href=&quot;#一，-关于路由懒加载&quot; class=&quot;headerlink&quot; title=&quot;一， 关于路由懒加载&quot;&gt;&lt;/a&gt;一， 关于路由懒加载&lt;/h4&gt;&lt;p&gt;​        由于mvvm的特性页面的路由转换不会触发页面的跳转，因此在vue-cli项目完成时他的app.js文件会特别庞大，这对于小型服务器的加载是致命问题，路由的懒加载可以让app.js的读取舍弃未用到的路由组件，当用到的时候再加载&lt;/p&gt;
    
    </summary>
    
    
      <category term="-前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="-vue-cli -vue" scheme="http://ccblog.club/tags/vue-cli-vue/"/>
    
  </entry>
  
  <entry>
    <title>session持久化问题</title>
    <link href="http://ccblog.club/2019/10/10/session%E6%8C%81%E4%B9%85%E5%8C%96%E9%97%AE%E9%A2%98/"/>
    <id>http://ccblog.club/2019/10/10/session持久化问题/</id>
    <published>2019-10-10T05:42:01.000Z</published>
    <updated>2019-10-10T05:49:29.878Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-，问题来源"><a href="#一-，问题来源" class="headerlink" title="一 ，问题来源"></a>一 ，问题来源</h4><p>​    在做web相关的需求时候一旦涉及到登录注册组件那就必然离不开cookie和session这两个东西。session是基于服务器进行存储的，所以当服务器进行重启亦或是掉线时所有的session数据都回摧毁，那么如何才能使session能在一段时间内持续存在呢？</p><a id="more"></a><h4 id="二-，-解决办法"><a href="#二-，-解决办法" class="headerlink" title="二 ， 解决办法"></a>二 ， 解决办法</h4><p>​    需要用到express-session以及connect-mongo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var session = require(&apos;express-session&apos;)</span><br><span class="line">const MongoStore = require(&apos;connect-mongo&apos;)(session)</span><br></pre></td></tr></table></figure><p>​    然后再进行相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.use(session(&#123;</span><br><span class="line">    secret:&apos;keyboard cat&apos;,</span><br><span class="line">    resave:false,</span><br><span class="line">    saveUninitialized:true,</span><br><span class="line">    rolling:true,</span><br><span class="line">    cookie:&#123;</span><br><span class="line">        maxAge:1000*30*60</span><br><span class="line">    &#125;,</span><br><span class="line">    store:new MongoStore(&#123;</span><br><span class="line">        url:&quot;mongodb://localhost/device&quot;,</span><br><span class="line">        touchAfter:24 * 3600</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><p>之后再到router之中定义session</p><h4 id="三-，-两个端口之间的跨域问题"><a href="#三-，-两个端口之间的跨域问题" class="headerlink" title="三 ， 两个端口之间的跨域问题"></a>三 ， 两个端口之间的跨域问题</h4><p>直接上代码，复制粘贴便可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.all(&apos;*&apos;,(req,res,next)=&gt;&#123;</span><br><span class="line">    res.header(&quot;Access-Control-Allow-Credentials&quot;,&apos;true&apos;)</span><br><span class="line">    res.header(&quot;Access-Control-Allow-Origin&quot;,req.headers.origin)</span><br><span class="line">    res.header(&quot;Access-Control-Allow-Methods&quot;,&quot;PUT,GET,POST,DELETE,OPTIONS&quot;)</span><br><span class="line">    res.header(&apos;Access-Control-Allow-Headers&apos;,&quot;Content-Type,username&quot;)</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结束！</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一-，问题来源&quot;&gt;&lt;a href=&quot;#一-，问题来源&quot; class=&quot;headerlink&quot; title=&quot;一 ，问题来源&quot;&gt;&lt;/a&gt;一 ，问题来源&lt;/h4&gt;&lt;p&gt;​    在做web相关的需求时候一旦涉及到登录注册组件那就必然离不开cookie和session这两个东西。session是基于服务器进行存储的，所以当服务器进行重启亦或是掉线时所有的session数据都回摧毁，那么如何才能使session能在一段时间内持续存在呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="-前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="-express -nodejs" scheme="http://ccblog.club/tags/express-nodejs/"/>
    
  </entry>
  
  <entry>
    <title>vue基础项目留言本</title>
    <link href="http://ccblog.club/2019/10/03/vue%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE%E7%95%99%E8%A8%80%E6%9C%AC/"/>
    <id>http://ccblog.club/2019/10/03/vue基础项目留言本/</id>
    <published>2019-10-03T05:43:42.000Z</published>
    <updated>2019-10-03T05:53:20.835Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-。创建项目"><a href="#一-。创建项目" class="headerlink" title="一 。创建项目"></a>一 。创建项目</h4><p>参考上文，这里不多说</p><h4 id="二-。-静态页面"><a href="#二-。-静态页面" class="headerlink" title="二 。 静态页面"></a>二 。 静态页面</h4><p>首先考虑当前界面到底需要几个模板</p><a id="more"></a><p><img src="C:%5CUsers%5C86139%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1570081688171.png" alt="1570081688171"></p><p>在这里考虑到了四个组件</p><p>APP.vue作为主界面框架</p><p>add.vue作为表单的组件</p><p>list.vue作为表格组件</p><p>ltem.vue作为每行列表的组件</p><h6 id="组件传递"><a href="#组件传递" class="headerlink" title="组件传递"></a>组件传递</h6><p>当父组件向子组件传递内容时</p><p>父组件通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-bind:XXX=&apos;XXX&apos;</span><br></pre></td></tr></table></figure><p>绑定元素</p><p>子组件通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prop：&#123;</span><br><span class="line">XXX</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取元素</p><h6 id="组件调用"><a href="#组件调用" class="headerlink" title="组件调用"></a>组件调用</h6><p>当父组件需要调用这个子组件时</p><p>父组件通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import XXX from &apos;xxx&apos;</span><br></pre></td></tr></table></figure><p>获取子组件</p><p>然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">components:&#123;</span><br><span class="line">XXX</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用子组件</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一-。创建项目&quot;&gt;&lt;a href=&quot;#一-。创建项目&quot; class=&quot;headerlink&quot; title=&quot;一 。创建项目&quot;&gt;&lt;/a&gt;一 。创建项目&lt;/h4&gt;&lt;p&gt;参考上文，这里不多说&lt;/p&gt;&lt;h4 id=&quot;二-。-静态页面&quot;&gt;&lt;a href=&quot;#二-。-静态页面&quot; class=&quot;headerlink&quot; title=&quot;二 。 静态页面&quot;&gt;&lt;/a&gt;二 。 静态页面&lt;/h4&gt;&lt;p&gt;首先考虑当前界面到底需要几个模板&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="-vue" scheme="http://ccblog.club/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>webpack3配置（若前文无法打开请看这篇）</title>
    <link href="http://ccblog.club/2019/10/03/webpack3%E9%85%8D%E7%BD%AE/"/>
    <id>http://ccblog.club/2019/10/03/webpack3配置/</id>
    <published>2019-10-03T00:32:28.000Z</published>
    <updated>2019-10-03T00:38:38.868Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，基本配置"><a href="#一，基本配置" class="headerlink" title="一，基本配置"></a>一，基本配置</h4><h5 id="1-创建src文件夹用于存放主文件"><a href="#1-创建src文件夹用于存放主文件" class="headerlink" title="1.创建src文件夹用于存放主文件"></a>1.创建src文件夹用于存放主文件</h5><p>​        </p><a id="more"></a><h5 id="2-创建dist文件夹存放webpack转换过的文件"><a href="#2-创建dist文件夹存放webpack转换过的文件" class="headerlink" title="2.创建dist文件夹存放webpack转换过的文件"></a>2.创建dist文件夹存放webpack转换过的文件</h5><h5 id="3-在根目录下创建webpack-config-js文件用于修改webpack配置"><a href="#3-在根目录下创建webpack-config-js文件用于修改webpack配置" class="headerlink" title="3.在根目录下创建webpack.config.js文件用于修改webpack配置"></a>3.在根目录下创建webpack.config.js文件用于修改webpack配置</h5><h5 id="4-在src文件夹中创建index-html（随意，建议遵循mvc建立views文件夹），main-js（所有js和css的入口文件）在html不导入任何的js和css包"><a href="#4-在src文件夹中创建index-html（随意，建议遵循mvc建立views文件夹），main-js（所有js和css的入口文件）在html不导入任何的js和css包" class="headerlink" title="4.在src文件夹中创建index.html（随意，建议遵循mvc建立views文件夹），main.js（所有js和css的入口文件）在html不导入任何的js和css包"></a>4.在src文件夹中创建index.html（随意，建议遵循mvc建立views文件夹），main.js（所有js和css的入口文件）在html不导入任何的js和css包</h5><h5 id><a href="#" class="headerlink" title=" "></a> </h5><h4 id="二，详细配置"><a href="#二，详细配置" class="headerlink" title="二，详细配置"></a>二，详细配置</h4><h5 id="1-webpack-dev-server"><a href="#1-webpack-dev-server" class="headerlink" title="1.webpack-dev-server"></a>1.webpack-dev-server</h5><p>该组件用于自动将src的文件打包到dist变成webpack格式输出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm init -y <span class="comment">//初始化项目</span></span><br><span class="line">npm init webpack-dev-server <span class="comment">//安装组件</span></span><br><span class="line"></span><br><span class="line">&lt;!--&gt;package.json&lt;--!&gt;</span><br><span class="line">   <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --open --port 3000 --contentBase src --hot"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//执行自动打开  绑定3000端口  设src为根目录  启动热更新</span></span><br><span class="line"></span><br><span class="line">&lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:path.join(__dirname,<span class="string">'./src/main.js'</span>), <span class="comment">//入口文件</span></span><br><span class="line">    output:&#123;</span><br><span class="line">        path:path.join(__dirname,<span class="string">'./dist'</span>),<span class="comment">//出口文件</span></span><br><span class="line">        filename:<span class="string">'bundle.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-html-webpack-plugin"><a href="#2-html-webpack-plugin" class="headerlink" title="2.html-webpack-plugin"></a>2.html-webpack-plugin</h5><p>该组件用于自动生成一个和html相同的界面并且导入bundle.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm i html-webpack-plugin</span><br><span class="line"></span><br><span class="line">&lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line">plugins:[</span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),<span class="comment">//new一个热更新的模块对象</span></span><br><span class="line">        <span class="keyword">new</span> htmlWbppackFlugin(&#123;</span><br><span class="line">            <span class="comment">//创建一个在内存中生成html页面的插件</span></span><br><span class="line">            template:path.join(__dirname,<span class="string">'./src/index.html'</span>),<span class="comment">//指定模板页面</span></span><br><span class="line">            filename:<span class="string">'index.html'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h5 id="3-导入css-sass-图标-图像url等文件"><a href="#3-导入css-sass-图标-图像url等文件" class="headerlink" title="3.导入css/sass/图标/图像url等文件"></a>3.导入css/sass/图标/图像url等文件</h5><p>通过各种loader让webpack能够识别这些东西</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm i css-loader file-loader</span><br><span class="line">npm i url-loader</span><br><span class="line"> </span><br><span class="line"> &lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line"> <span class="built_in">module</span>:&#123;<span class="comment">//这个节点用于配置所有的第三方模块加载器</span></span><br><span class="line">        rules:[<span class="comment">//所有模块的匹配规则</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span> ,<span class="attr">use</span>:[<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>]&#125;,</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(jpg|png|gif|jepg)$/</span>,<span class="attr">use</span>:<span class="string">'url-loader?limit=7631&amp;name=[hash:8]-[name].[ext]'</span>&#125;,<span class="comment">//读取图片</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(ttf|eot|svg|woff|woff2)$/</span>,<span class="attr">use</span>:<span class="string">"url-loader"</span>&#125;<span class="comment">//处理字体文件 </span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="4-通过babel插件来识别es6等高级语言"><a href="#4-通过babel插件来识别es6等高级语言" class="headerlink" title="4.通过babel插件来识别es6等高级语言"></a>4.通过babel插件来识别es6等高级语言</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm i babel-core babel-loader babel-plugin-transform-runtime</span><br><span class="line">npm i babel-preset-env babel-preset-stage<span class="number">-0</span></span><br><span class="line"></span><br><span class="line">&lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line">   rules:[<span class="comment">//所有模块的匹配规则</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span> ,<span class="attr">use</span>:[<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>]&#125;,</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(jpg|png|gif|jepg)$/</span>,<span class="attr">use</span>:<span class="string">'url-loader?limit=7631&amp;name=[hash:8]-[name].[ext]'</span>&#125;,<span class="comment">//读取图片</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(ttf|eot|svg|woff|woff2)$/</span>,<span class="attr">use</span>:<span class="string">"url-loader"</span>&#125;,<span class="comment">//处理字体文件 </span></span><br><span class="line">       &#123; &#123;<span class="attr">test</span>:<span class="regexp">/\.js$/</span>,<span class="attr">use</span>:<span class="string">"bebel-loader"</span>,<span class="attr">exclude</span>:<span class="regexp">/node_modules/</span>&#125;&#125;<span class="comment">//在配置时，必须把node_modules排除</span></span><br><span class="line">        ]</span><br></pre></td></tr></table></figure><p>然后在根目录新建一个.babelrc的配置文件，为json格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"presets"</span>:[<span class="string">"env"</span>,<span class="string">"stage-0"</span>],</span><br><span class="line"><span class="string">"plugins"</span>:[<span class="string">"transform-runtime"</span>]</span><br></pre></td></tr></table></figure><p>注意</p><h6 id="由于本文是基于webpack3-X的配置，目前普遍使用4-X-因此，babel-core的版本必须降为6-X并且babel-loader的版本必须降到7-X，不然你会被报错到怀疑人生。"><a href="#由于本文是基于webpack3-X的配置，目前普遍使用4-X-因此，babel-core的版本必须降为6-X并且babel-loader的版本必须降到7-X，不然你会被报错到怀疑人生。" class="headerlink" title="由于本文是基于webpack3.X的配置，目前普遍使用4.X.因此，babel-core的版本必须降为6.X并且babel-loader的版本必须降到7.X，不然你会被报错到怀疑人生。"></a>由于本文是基于webpack3.X的配置，目前普遍使用4.X.因此，babel-core的版本必须降为6.X并且babel-loader的版本必须降到7.X，不然你会被报错到怀疑人生。</h6><h6 id="如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3-X的配置就基本okk了。"><a href="#如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3-X的配置就基本okk了。" class="headerlink" title="如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3.X的配置就基本okk了。"></a>如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3.X的配置就基本okk了。</h6>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一，基本配置&quot;&gt;&lt;a href=&quot;#一，基本配置&quot; class=&quot;headerlink&quot; title=&quot;一，基本配置&quot;&gt;&lt;/a&gt;一，基本配置&lt;/h4&gt;&lt;h5 id=&quot;1-创建src文件夹用于存放主文件&quot;&gt;&lt;a href=&quot;#1-创建src文件夹用于存放主文件&quot; class=&quot;headerlink&quot; title=&quot;1.创建src文件夹用于存放主文件&quot;&gt;&lt;/a&gt;1.创建src文件夹用于存放主文件&lt;/h5&gt;&lt;p&gt;​        &lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://ccblog.club/tags/vue/"/>
    
      <category term="webpack" scheme="http://ccblog.club/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>通过vue-cli创建vue项目</title>
    <link href="http://ccblog.club/2019/10/02/%E9%80%9A%E8%BF%87vue-cli%E5%88%9B%E5%BB%BAvue%E9%A1%B9%E7%9B%AE/"/>
    <id>http://ccblog.club/2019/10/02/通过vue-cli创建vue项目/</id>
    <published>2019-10-02T08:15:13.000Z</published>
    <updated>2019-10-03T00:30:43.111Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm i -g vue-cli <span class="comment">//建议使用全局安装不然的话vue指令无法识别</span></span><br><span class="line">vue init webpack vue_demo <span class="comment">//创建名为vue_demo的基于webpack的项目</span></span><br><span class="line">cd vue_demo <span class="comment">//进入项目</span></span><br><span class="line">npm i <span class="comment">//初始化项目</span></span><br><span class="line">npm run dev <span class="comment">//运行项目</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>完工</p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i -g vue-cli &lt;span class=&quot;comment&quot;&gt;//建议使用全局安装不然的话vue指令无法识别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vue init webpack vue_demo &lt;span class=&quot;comment&quot;&gt;//创建名为vue_demo的基于webpack的项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd vue_demo &lt;span class=&quot;comment&quot;&gt;//进入项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i &lt;span class=&quot;comment&quot;&gt;//初始化项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm run dev &lt;span class=&quot;comment&quot;&gt;//运行项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://ccblog.club/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue2.X集合webpack3.X时的各种坑</title>
    <link href="http://ccblog.club/2019/09/20/vue2-X%E9%9B%86%E5%90%88webpack3-X%E6%97%B6%E7%9A%84%E5%90%84%E7%A7%8D%E5%9D%91/"/>
    <id>http://ccblog.club/2019/09/20/vue2-X集合webpack3-X时的各种坑/</id>
    <published>2019-09-20T07:43:41.000Z</published>
    <updated>2019-09-20T07:53:52.485Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一-vue的引用"><a href="#一-vue的引用" class="headerlink" title="一.vue的引用"></a>一.vue的引用</h5><p>由于默认的main属性是属于vue.common.js而不是vue.js，因此如果进行普通引入</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br></pre></td></tr></table></figure><p>是无法正常运行的。</p><h6 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h6><p>1.直接导入vue路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;../node_module/vue/dist/vue.js&apos;</span><br></pre></td></tr></table></figure><p>2.在webpack配置项中对路径进行改动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resolve:&#123;</span><br><span class="line">      alias:&#123; //修改路径</span><br><span class="line">          &quot;vue$&quot;:&quot;vue/dist/vue.js&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="二-xxx-vue如何让html接受"><a href="#二-xxx-vue如何让html接受" class="headerlink" title="二.xxx.vue如何让html接受"></a>二.xxx.vue如何让html接受</h5><p>vue文件默认不被webpack识别，因此在进行render等模块操作时候需要导入loader</p><h6 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-loader vue-template-compiler</span><br><span class="line"></span><br><span class="line"> &#123;test:/\.vue$/,use:&quot;vue-loader&quot;&#125;</span><br></pre></td></tr></table></figure><p>正常的话就可以进行vue与webpack的合作了</p><p>。。</p><p>然而你还是被报错报成猪头的话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const VueLoaderPlugin = require(&apos;vue-loader/lib/plugin&apos;)</span><br><span class="line"></span><br><span class="line">new VueLoaderPlugin()</span><br></pre></td></tr></table></figure><p>在配置文件的全局和plugins下分别加入这两条代码就可以识别了</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一-vue的引用&quot;&gt;&lt;a href=&quot;#一-vue的引用&quot; class=&quot;headerlink&quot; title=&quot;一.vue的引用&quot;&gt;&lt;/a&gt;一.vue的引用&lt;/h5&gt;&lt;p&gt;由于默认的main属性是属于vue.common.js而不是vue.js，因此如果进行普通引入&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="-vue -webpack" scheme="http://ccblog.club/tags/vue-webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack3.X详细配置指南</title>
    <link href="http://ccblog.club/2019/09/20/webpack3-X%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>http://ccblog.club/2019/09/20/webpack3-X详细配置指南/</id>
    <published>2019-09-20T05:02:28.000Z</published>
    <updated>2019-09-20T07:08:46.681Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，基本配置"><a href="#一，基本配置" class="headerlink" title="一，基本配置"></a>一，基本配置</h4><h5 id="1-创建src文件夹用于存放主文件"><a href="#1-创建src文件夹用于存放主文件" class="headerlink" title="1.创建src文件夹用于存放主文件"></a>1.创建src文件夹用于存放主文件</h5><p>​        </p><a id="more"></a><h5 id="2-创建dist文件夹存放webpack转换过的文件"><a href="#2-创建dist文件夹存放webpack转换过的文件" class="headerlink" title="2.创建dist文件夹存放webpack转换过的文件"></a>2.创建dist文件夹存放webpack转换过的文件</h5><h5 id="3-在根目录下创建webpack-config-js文件用于修改webpack配置"><a href="#3-在根目录下创建webpack-config-js文件用于修改webpack配置" class="headerlink" title="3.在根目录下创建webpack.config.js文件用于修改webpack配置"></a>3.在根目录下创建webpack.config.js文件用于修改webpack配置</h5><h5 id="4-在src文件夹中创建index-html（随意，建议遵循mvc建立views文件夹），main-js（所有js和css的入口文件）在html不导入任何的js和css包"><a href="#4-在src文件夹中创建index-html（随意，建议遵循mvc建立views文件夹），main-js（所有js和css的入口文件）在html不导入任何的js和css包" class="headerlink" title="4.在src文件夹中创建index.html（随意，建议遵循mvc建立views文件夹），main.js（所有js和css的入口文件）在html不导入任何的js和css包"></a>4.在src文件夹中创建index.html（随意，建议遵循mvc建立views文件夹），main.js（所有js和css的入口文件）在html不导入任何的js和css包</h5><h5 id><a href="#" class="headerlink" title=" "></a> </h5><h4 id="二，详细配置"><a href="#二，详细配置" class="headerlink" title="二，详细配置"></a>二，详细配置</h4><h5 id="1-webpack-dev-server"><a href="#1-webpack-dev-server" class="headerlink" title="1.webpack-dev-server"></a>1.webpack-dev-server</h5><p>该组件用于自动将src的文件打包到dist变成webpack格式输出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm init -y <span class="comment">//初始化项目</span></span><br><span class="line">npm init webpack-dev-server <span class="comment">//安装组件</span></span><br><span class="line"></span><br><span class="line">&lt;!--&gt;package.json&lt;--!&gt;</span><br><span class="line">   <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --open --port 3000 --contentBase src --hot"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//执行自动打开  绑定3000端口  设src为根目录  启动热更新</span></span><br><span class="line"></span><br><span class="line">&lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:path.join(__dirname,<span class="string">'./src/main.js'</span>), <span class="comment">//入口文件</span></span><br><span class="line">    output:&#123;</span><br><span class="line">        path:path.join(__dirname,<span class="string">'./dist'</span>),<span class="comment">//出口文件</span></span><br><span class="line">        filename:<span class="string">'bundle.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-html-webpack-plugin"><a href="#2-html-webpack-plugin" class="headerlink" title="2.html-webpack-plugin"></a>2.html-webpack-plugin</h5><p>该组件用于自动生成一个和html相同的界面并且导入bundle.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm i html-webpack-plugin</span><br><span class="line"></span><br><span class="line">&lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line">plugins:[</span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),<span class="comment">//new一个热更新的模块对象</span></span><br><span class="line">        <span class="keyword">new</span> htmlWbppackFlugin(&#123;</span><br><span class="line">            <span class="comment">//创建一个在内存中生成html页面的插件</span></span><br><span class="line">            template:path.join(__dirname,<span class="string">'./src/index.html'</span>),<span class="comment">//指定模板页面</span></span><br><span class="line">            filename:<span class="string">'index.html'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h5 id="3-导入css-sass-图标-图像url等文件"><a href="#3-导入css-sass-图标-图像url等文件" class="headerlink" title="3.导入css/sass/图标/图像url等文件"></a>3.导入css/sass/图标/图像url等文件</h5><p>通过各种loader让webpack能够识别这些东西</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm i css-loader file-loader</span><br><span class="line">npm i url-loader</span><br><span class="line"> </span><br><span class="line"> &lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line"> <span class="built_in">module</span>:&#123;<span class="comment">//这个节点用于配置所有的第三方模块加载器</span></span><br><span class="line">        rules:[<span class="comment">//所有模块的匹配规则</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span> ,<span class="attr">use</span>:[<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>]&#125;,</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(jpg|png|gif|jepg)$/</span>,<span class="attr">use</span>:<span class="string">'url-loader?limit=7631&amp;name=[hash:8]-[name].[ext]'</span>&#125;,<span class="comment">//读取图片</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(ttf|eot|svg|woff|woff2)$/</span>,<span class="attr">use</span>:<span class="string">"url-loader"</span>&#125;<span class="comment">//处理字体文件 </span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="4-通过babel插件来识别es6等高级语言"><a href="#4-通过babel插件来识别es6等高级语言" class="headerlink" title="4.通过babel插件来识别es6等高级语言"></a>4.通过babel插件来识别es6等高级语言</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&gt;终端&lt;--!&gt;</span><br><span class="line">npm i babel-core babel-loader babel-plugin-transform-runtime</span><br><span class="line">npm i babel-preset-env babel-preset-stage<span class="number">-0</span></span><br><span class="line"></span><br><span class="line">&lt;!--&gt;配置文件&lt;--!&gt;</span><br><span class="line">   rules:[<span class="comment">//所有模块的匹配规则</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span> ,<span class="attr">use</span>:[<span class="string">'style-loader'</span>,<span class="string">'css-loader'</span>]&#125;,</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(jpg|png|gif|jepg)$/</span>,<span class="attr">use</span>:<span class="string">'url-loader?limit=7631&amp;name=[hash:8]-[name].[ext]'</span>&#125;,<span class="comment">//读取图片</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(ttf|eot|svg|woff|woff2)$/</span>,<span class="attr">use</span>:<span class="string">"url-loader"</span>&#125;,<span class="comment">//处理字体文件 </span></span><br><span class="line">       &#123; &#123;<span class="attr">test</span>:<span class="regexp">/\.js$/</span>,<span class="attr">use</span>:<span class="string">"bebel-loader"</span>,<span class="attr">exclude</span>:<span class="regexp">/node_modules/</span>&#125;&#125;<span class="comment">//在配置时，必须把node_modules排除</span></span><br><span class="line">        ]</span><br></pre></td></tr></table></figure><p>然后在根目录新建一个.babelrc的配置文件，为json格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"presets"</span>:[<span class="string">"env"</span>,<span class="string">"stage-0"</span>],</span><br><span class="line"><span class="string">"plugins"</span>:[<span class="string">"transform-runtime"</span>]</span><br></pre></td></tr></table></figure><p>注意</p><h6 id="由于本文是基于webpack3-X的配置，目前普遍使用4-X-因此，babel-core的版本必须降为6-X并且babel-loader的版本必须降到7-X，不然你会被报错到怀疑人生。"><a href="#由于本文是基于webpack3-X的配置，目前普遍使用4-X-因此，babel-core的版本必须降为6-X并且babel-loader的版本必须降到7-X，不然你会被报错到怀疑人生。" class="headerlink" title="由于本文是基于webpack3.X的配置，目前普遍使用4.X.因此，babel-core的版本必须降为6.X并且babel-loader的版本必须降到7.X，不然你会被报错到怀疑人生。"></a>由于本文是基于webpack3.X的配置，目前普遍使用4.X.因此，babel-core的版本必须降为6.X并且babel-loader的版本必须降到7.X，不然你会被报错到怀疑人生。</h6><h6 id="如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3-X的配置就基本okk了。"><a href="#如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3-X的配置就基本okk了。" class="headerlink" title="如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3.X的配置就基本okk了。"></a>如果你已经将上面的配置操作完毕并且对html，css等操作没有报错的话，拿webpack3.X的配置就基本okk了。</h6>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一，基本配置&quot;&gt;&lt;a href=&quot;#一，基本配置&quot; class=&quot;headerlink&quot; title=&quot;一，基本配置&quot;&gt;&lt;/a&gt;一，基本配置&lt;/h4&gt;&lt;h5 id=&quot;1-创建src文件夹用于存放主文件&quot;&gt;&lt;a href=&quot;#1-创建src文件夹用于存放主文件&quot; class=&quot;headerlink&quot; title=&quot;1.创建src文件夹用于存放主文件&quot;&gt;&lt;/a&gt;1.创建src文件夹用于存放主文件&lt;/h5&gt;&lt;p&gt;​        &lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://ccblog.club/tags/vue/"/>
    
      <category term="webpack" scheme="http://ccblog.club/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>nodejs最实用分页攻略</title>
    <link href="http://ccblog.club/2019/09/20/nodejs%E6%9C%80%E5%AE%9E%E7%94%A8%E5%88%86%E9%A1%B5%E6%94%BB%E7%95%A5/"/>
    <id>http://ccblog.club/2019/09/20/nodejs最实用分页攻略/</id>
    <published>2019-09-20T02:30:24.000Z</published>
    <updated>2019-09-20T02:37:02.107Z</updated>
    
    <content type="html"><![CDATA[<h6 id="话不多说直接开始"><a href="#话不多说直接开始" class="headerlink" title="话不多说直接开始"></a>话不多说直接开始</h6><h5 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h5><p>​    在你看这篇文章想要进行分页时，请确保已经做好以下准备工作</p><a id="more"></a><p>​            ——你的html页面已经搭建完成（表格，上一页/下一页，页面跳转）</p><p>​            ——你的后台数据已经通过模板或者循环成功的渲染到你的前台表格</p><h5 id="2-给他们做一个点击事件，通过switch（if）操作"><a href="#2-给他们做一个点击事件，通过switch（if）操作" class="headerlink" title="2.给他们做一个点击事件，通过switch（if）操作"></a>2.给他们做一个点击事件，通过switch（if）操作</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params">type</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> nowpage = $(<span class="string">'#nowpage'</span>).text()</span><br><span class="line">    <span class="keyword">var</span> allpage = $(<span class="string">'#allpage'</span>).text()</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'prev'</span>:</span><br><span class="line">            <span class="keyword">if</span> (nowpage &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                nowpage--</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                alert(<span class="string">'已经是第一页了'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            ;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'next'</span>:</span><br><span class="line">            <span class="keyword">if</span> (nowpage &lt; allpage) &#123;</span><br><span class="line">                nowpage++ </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; alert(<span class="string">'已经是最后一页了'</span>) &#125;</span><br><span class="line">            ; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'go'</span>:</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="string">'#gopage'</span>).val() &gt; allpage) &#123;</span><br><span class="line">                alert(<span class="string">'输入页数错误了'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ($(<span class="string">'#gopage'</span>).val() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                alert(<span class="string">'输入页数错误了'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                nowpage = $(<span class="string">'#gopage'</span>).val()</span><br><span class="line">            &#125;; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">window</span>.location.href = <span class="string">'/create?page='</span>+nowpage+<span class="string">''</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-后台操作"><a href="#3-后台操作" class="headerlink" title="3.后台操作"></a>3.后台操作</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">'/create'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pagesize = req.query.pagesize || <span class="number">10</span></span><br><span class="line">    <span class="keyword">var</span> page = req.query.page || <span class="number">1</span></span><br><span class="line">    <span class="keyword">var</span> allcount1 = <span class="literal">null</span></span><br><span class="line">    Journalism.count(&#123;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,allcount</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            res.status(<span class="number">500</span>).send(<span class="string">"Server Not Found"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        allcount1 = allcount</span><br><span class="line">    &#125;)</span><br><span class="line">    Journalism.find(<span class="function"><span class="keyword">function</span>(<span class="params">err,journalisms</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">"Server Not Found"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        res.render(<span class="string">'create.html'</span>,&#123;</span><br><span class="line">            journalisms:journalisms,</span><br><span class="line">            user:req.session.user,</span><br><span class="line">            nowpage:page,</span><br><span class="line">            allpage:<span class="built_in">Math</span>.ceil(allcount1/pagesize)</span><br><span class="line">        &#125;)  </span><br><span class="line">    &#125;).sort(&#123;<span class="string">'datatime'</span>:<span class="number">-1</span>&#125;).limit(pagesize).skip((page<span class="number">-1</span>)*pagesize)</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>基本分页就此完成</p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;话不多说直接开始&quot;&gt;&lt;a href=&quot;#话不多说直接开始&quot; class=&quot;headerlink&quot; title=&quot;话不多说直接开始&quot;&gt;&lt;/a&gt;话不多说直接开始&lt;/h6&gt;&lt;h5 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h5&gt;&lt;p&gt;​    在你看这篇文章想要进行分页时，请确保已经做好以下准备工作&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="nodejs" scheme="http://ccblog.club/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>nodejs在表单中添加验证码验证</title>
    <link href="http://ccblog.club/2019/09/20/nodejs%E5%9C%A8%E8%A1%A8%E5%8D%95%E4%B8%AD%E6%B7%BB%E5%8A%A0%E9%AA%8C%E8%AF%81%E7%A0%81%E9%AA%8C%E8%AF%81/"/>
    <id>http://ccblog.club/2019/09/20/nodejs在表单中添加验证码验证/</id>
    <published>2019-09-20T02:18:07.000Z</published>
    <updated>2019-09-20T02:29:42.506Z</updated>
    
    <content type="html"><![CDATA[<h6 id="废话不多说了直接开始吧"><a href="#废话不多说了直接开始吧" class="headerlink" title="废话不多说了直接开始吧"></a>废话不多说了直接开始吧</h6><h5 id="1，好一个简单的表单页面，just-like，懒得改格式了你们将就哈"><a href="#1，好一个简单的表单页面，just-like，懒得改格式了你们将就哈" class="headerlink" title="1，好一个简单的表单页面，just like，懒得改格式了你们将就哈"></a>1，<img src="file:///C:%5CUsers%5C86139%5CAppData%5CLocal%5CTemp%5CSGPicFaceTpBq%5C8116%5C00664CB8.png" alt="img">好一个简单的表单页面，just like，懒得改格式了你们将就哈</h5><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"formlist"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleFormControlInput1"</span>&gt;</span>您的姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleFormControlInput1"</span> <span class="attr">placeholder</span>=<span class="string">"请输入正确的姓名方便我们的联系"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleFormControlInput1"</span>&gt;</span>您的邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleFormControlInput1"</span> <span class="attr">placeholder</span>=<span class="string">"请输入正确的邮箱方便我们的联系"</span> <span class="attr">name</span>=<span class="string">"emial"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleFormControlInput1"</span>&gt;</span>您的手机号码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleFormControlInput1"</span> <span class="attr">placeholder</span>=<span class="string">"请输入正确的手机号方便我们的联系"</span> <span class="attr">name</span>=<span class="string">"phone"</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleFormControlSelect1"</span>&gt;</span>应聘合作相关<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleFormControlSelect1"</span> <span class="attr">name</span>=<span class="string">"class"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span>&gt;</span>应聘<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span>&gt;</span>合作<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span>&gt;</span>投诉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span>&gt;</span>建议<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleFormControlTextarea1"</span>&gt;</span>具体内容<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"exampleFormControlTextarea1"</span> <span class="attr">rows</span>=<span class="string">"3"</span> <span class="attr">name</span>=<span class="string">"note"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"验证码"</span>  <span class="attr">id</span>=<span class="string">"svgtext"</span> <span class="attr">name</span>=<span class="string">"svg"</span>&gt;</span></span><br><span class="line">                      </span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'/ver'</span> <span class="attr">onclick</span>=<span class="string">'changeSvg()'</span> <span class="attr">id</span>=<span class="string">"svgimg"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span> <span class="attr">role</span>=<span class="string">"alert"</span> <span class="attr">id</span>=<span class="string">"control"</span>&gt;</span></span><br><span class="line">                          请输入验证码</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">data-target</span>=<span class="string">"#exampleModal"</span>&gt;</span></span><br><span class="line">                                确认提交信息</span><br><span class="line">                              <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        </span><br><span class="line">                              <span class="comment">&lt;!-- Modal --&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"exampleModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"exampleModalLabel"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"exampleModalLabel"</span>&gt;</span>提交您的信息<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                                      请确认您填写的信息准确从而方便我们之间的联系</span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-secondary"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>再想想<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>确定了<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-然后我们在router-js端做个验证码"><a href="#2-然后我们在router-js端做个验证码" class="headerlink" title="2.然后我们在router.js端做个验证码"></a>2.然后我们在router.js端做个验证码</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> captcha = <span class="built_in">require</span>(<span class="string">'svg-captcha'</span>)</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/ver'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> cap = captcha.create();</span><br><span class="line">    req.session.captcha = cap.text</span><br><span class="line">    res.type(<span class="string">'svg'</span>)</span><br><span class="line">    res.send(cap.data);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这样一来图片img的src路径指向该理由，从而显示验证码图片</p><h5 id="3-做一个点击事件"><a href="#3-做一个点击事件" class="headerlink" title="3.做一个点击事件"></a>3.做一个点击事件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">changeSvg</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $(event.target).attr(<span class="string">'src'</span>,<span class="string">'/ver?'</span>+<span class="built_in">Math</span>.random())</span><br><span class="line">         &#125;</span><br><span class="line">       &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-最后便是提交表单的ajax了"><a href="#4-最后便是提交表单的ajax了" class="headerlink" title="4.最后便是提交表单的ajax了"></a>4.最后便是提交表单的ajax了</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#formlist'</span>).on(<span class="string">'submit'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.preventDefault()</span><br><span class="line">    <span class="keyword">var</span> formData = $(<span class="keyword">this</span>).serialize()</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type:<span class="string">'post'</span>,</span><br><span class="line">        url:<span class="string">'/person'</span>,</span><br><span class="line">        data:formData,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> err_code =data.err_code</span><br><span class="line">            <span class="keyword">if</span>(err_code===<span class="number">500</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.alert(<span class="string">"服务器出错啦"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(err_code===<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.alert(<span class="string">"验证码错误请重试"</span>)</span><br><span class="line">                $(<span class="string">'#control'</span>).attr(<span class="string">"class"</span>,<span class="string">"alert alert-danger"</span>)</span><br><span class="line">                $(<span class="string">'#control'</span>).text(<span class="string">'请输入正确的验证码,注意大小写的区分哦'</span>)</span><br><span class="line">                $(<span class="string">'#svgimg'</span>).attr(<span class="string">'src'</span>,<span class="string">'/ver?'</span>+<span class="built_in">Math</span>.random())</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(err_code===<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.alert(<span class="string">"您的信息已经提交成功"</span>)</span><br><span class="line">                $(<span class="string">'#control'</span>).attr(<span class="string">"class"</span>,<span class="string">"alert alert-success"</span>)</span><br><span class="line">                $(<span class="string">'#control'</span>).text(<span class="string">'验证码输入正确'</span>)</span><br><span class="line">                <span class="built_in">window</span>.location.href = <span class="string">'/person'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>关于表单提交的post路由就不贴了，这样一个验证系统就差不多多好了( ´Д`)y━・</p><p>如有问题可以提问</p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;废话不多说了直接开始吧&quot;&gt;&lt;a href=&quot;#废话不多说了直接开始吧&quot; class=&quot;headerlink&quot; title=&quot;废话不多说了直接开始吧&quot;&gt;&lt;/a&gt;废话不多说了直接开始吧&lt;/h6&gt;&lt;h5 id=&quot;1，好一个简单的表单页面，just-like，懒得改格式了你们将就哈&quot;&gt;&lt;a href=&quot;#1，好一个简单的表单页面，just-like，懒得改格式了你们将就哈&quot; class=&quot;headerlink&quot; title=&quot;1，好一个简单的表单页面，just like，懒得改格式了你们将就哈&quot;&gt;&lt;/a&gt;1，&lt;img src=&quot;file:///C:%5CUsers%5C86139%5CAppData%5CLocal%5CTemp%5CSGPicFaceTpBq%5C8116%5C00664CB8.png&quot; alt=&quot;img&quot;&gt;好一个简单的表单页面，just like，懒得改格式了你们将就哈&lt;/h5&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="nodejs" scheme="http://ccblog.club/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>在node项目中经常用到的一些东西</title>
    <link href="http://ccblog.club/2019/09/18/%E5%9C%A8node%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%BB%8F%E5%B8%B8%E7%94%A8%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%9C%E8%A5%BF/"/>
    <id>http://ccblog.club/2019/09/18/在node项目中经常用到的一些东西/</id>
    <published>2019-09-18T06:06:25.000Z</published>
    <updated>2019-09-18T06:23:26.556Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-引入body-parser"><a href="#一-引入body-parser" class="headerlink" title="一.引入body-parser"></a>一.引入body-parser</h4><h6 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;))</span><br><span class="line">app.use(bodyParser.json())</span><br></pre></td></tr></table></figure><a id="more"></a><p>#### </p><h4 id="二-引入session"><a href="#二-引入session" class="headerlink" title="二.引入session"></a>二.引入session</h4><h6 id="app-js-1"><a href="#app-js-1" class="headerlink" title="app.js"></a>app.js</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> session = <span class="built_in">require</span>(<span class="string">'express-session'</span>)</span><br><span class="line"></span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    secret:<span class="string">'keyboard cat'</span>,</span><br><span class="line">    resave:<span class="literal">false</span>,</span><br><span class="line">    saveUninitialized:<span class="literal">true</span></span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><h6 id="router-js"><a href="#router-js" class="headerlink" title="router.js"></a>router.js</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> body = req.body</span><br><span class="line">    User.findOne(&#123;</span><br><span class="line">        emial:body.emial,</span><br><span class="line">        password:body.password</span><br><span class="line">    &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,user</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">          <span class="keyword">return</span>  res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">                err_code:<span class="number">500</span>,</span><br><span class="line">                messages:<span class="string">"err"</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!user)&#123;</span><br><span class="line">           <span class="keyword">return</span> res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">                err_code:<span class="number">0</span>,</span><br><span class="line">                messages:<span class="string">"emial has benn invilied"</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        req.session.user = user</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            err_code:<span class="number">1</span>,</span><br><span class="line">            messages:<span class="string">"ok"</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="三-引入multer"><a href="#三-引入multer" class="headerlink" title="三.引入multer"></a>三.引入multer</h4><h6 id="router-js-1"><a href="#router-js-1" class="headerlink" title="router.js"></a>router.js</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> multer =<span class="built_in">require</span>(<span class="string">'multer'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> storage = multer.diskStorage(&#123;</span><br><span class="line">    destination:<span class="function"><span class="keyword">function</span>(<span class="params">req,file,cb</span>)</span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>,<span class="string">'./uploads/qua-img'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    filename:<span class="function"><span class="keyword">function</span>(<span class="params">req,file,cb</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ext = file.originalname.split(<span class="string">'.'</span>)[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">var</span> tmname = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime()+<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">9999</span>)</span><br><span class="line">        cb(<span class="literal">null</span>,<span class="string">''</span>+tmname+<span class="string">'.'</span>+ext+<span class="string">''</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> upload = multer(&#123;</span><br><span class="line">    storage:storage</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/qua-pic'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> size= req.file</span><br><span class="line">    <span class="keyword">if</span>(size&gt;<span class="number">500000</span>)&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            err_code:<span class="number">-1</span>,</span><br><span class="line">            messages:<span class="string">"pic too big"</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">     res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        err_code:<span class="number">0</span>,</span><br><span class="line">        messages:<span class="string">"okk"</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="四-ajax模板"><a href="#四-ajax模板" class="headerlink" title="四.ajax模板"></a>四.ajax模板</h4><h6 id="xxx-js"><a href="#xxx-js" class="headerlink" title="xxx.js"></a>xxx.js</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#create-form'</span>).on(<span class="string">'submit'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.preventDefault()</span><br><span class="line">    <span class="keyword">var</span> formData = $(<span class="keyword">this</span>).serialize()</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type:<span class="string">'post'</span>,</span><br><span class="line">        url:<span class="string">'/create'</span>,</span><br><span class="line">        data:formData,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> err_code =data.err_code</span><br><span class="line">            <span class="keyword">if</span>(err_code===<span class="number">500</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.alert(<span class="string">"服务器出错啦"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(err_code===<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.alert(<span class="string">"提交成功"</span>)</span><br><span class="line">                <span class="built_in">window</span>.location.href=<span class="string">'/create'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="五-art-template"><a href="#五-art-template" class="headerlink" title="五.art-template"></a>五.art-template</h4><h6 id="app-js-2"><a href="#app-js-2" class="headerlink" title="app.js"></a>app.js</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.engine(&apos;html&apos;,require(&apos;express-art-template&apos;))</span><br></pre></td></tr></table></figure><h4 id="六-router配置"><a href="#六-router配置" class="headerlink" title="六.router配置"></a>六.router配置</h4><h6 id="app-js-3"><a href="#app-js-3" class="headerlink" title="app.js"></a>app.js</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'./router'</span>)</span><br><span class="line"></span><br><span class="line">app.use(router)</span><br></pre></td></tr></table></figure><p>​    router.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var router =express.Router()</span><br><span class="line"></span><br><span class="line">module.exports = router</span><br></pre></td></tr></table></figure><h4 id="七-获取图片"><a href="#七-获取图片" class="headerlink" title="七.获取图片"></a>七.获取图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs =<span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line">exports.getAllimgs = <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">    fs.readdir(<span class="string">'./uploads/qua-img'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            callback(err)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> allimgs = [];</span><br><span class="line">        (<span class="function"><span class="keyword">function</span> <span class="title">iterator</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==files.length)&#123;</span><br><span class="line">                callback(allimgs)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            fs.stat(<span class="string">'./uploads/qua-img/'</span>+files[i],<span class="function"><span class="keyword">function</span>(<span class="params">err,stats</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(stats.isFile())&#123;</span><br><span class="line">                    allimgs.push(files[i])</span><br><span class="line">                &#125;</span><br><span class="line">                iterator(i+<span class="number">1</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">            &#125;)(<span class="number">0</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="八-kindeditor引入"><a href="#八-kindeditor引入" class="headerlink" title="八.kindeditor引入"></a>八.kindeditor引入</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">KindEditor.ready(<span class="function"><span class="keyword">function</span>(<span class="params">K</span>) </span>&#123;</span><br><span class="line">editor = K.create(<span class="string">'textarea[name="content"]'</span>, &#123;</span><br><span class="line">allowFileManager : <span class="literal">true</span>,</span><br><span class="line">afterBlur: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.sync();&#125;,</span><br><span class="line">uploadJson: <span class="string">'/uploadImg'</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/uploadImg'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> form = <span class="keyword">new</span> formidable.IncomingForm()</span><br><span class="line">    form.keepExtensions = <span class="literal">true</span></span><br><span class="line">    form.uploadDir =__dirname + <span class="string">'/public/upload'</span></span><br><span class="line">    form.parse(req,<span class="function"><span class="keyword">function</span>(<span class="params">err,fields,files</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="keyword">throw</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> image = files.imgFile;</span><br><span class="line">        <span class="keyword">var</span> path = image.path</span><br><span class="line">        path = path.replace(<span class="string">'/\\/g'</span>,<span class="string">'/'</span>)</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">'/upload'</span> +path.substr(path.lastIndexOf(<span class="string">'/'</span>),path.length)</span><br><span class="line">        <span class="keyword">var</span> info = &#123;</span><br><span class="line">            <span class="string">"error"</span>:<span class="number">0</span>,</span><br><span class="line">            <span class="string">"url"</span>:url</span><br><span class="line">        &#125;;</span><br><span class="line">        res.send(info)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>持续更新..</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一-引入body-parser&quot;&gt;&lt;a href=&quot;#一-引入body-parser&quot; class=&quot;headerlink&quot; title=&quot;一.引入body-parser&quot;&gt;&lt;/a&gt;一.引入body-parser&lt;/h4&gt;&lt;h6 id=&quot;app-js&quot;&gt;&lt;a href=&quot;#app-js&quot; class=&quot;headerlink&quot; title=&quot;app.js&quot;&gt;&lt;/a&gt;app.js&lt;/h6&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bodyParser = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;body-parser&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(bodyParser.urlencoded(&amp;#123;&lt;span class=&quot;attr&quot;&gt;extended&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(bodyParser.json())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="便捷" scheme="http://ccblog.club/tags/%E4%BE%BF%E6%8D%B7/"/>
    
  </entry>
  
  <entry>
    <title>node+mongoose增删改查思路</title>
    <link href="http://ccblog.club/2019/09/16/node-mongoose%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%80%9D%E8%B7%AF/"/>
    <id>http://ccblog.club/2019/09/16/node-mongoose增删改查思路/</id>
    <published>2019-09-16T06:57:26.000Z</published>
    <updated>2019-09-16T06:58:51.083Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-建立views视图页面"><a href="#1-建立views视图页面" class="headerlink" title="1.建立views视图页面"></a>1.建立views视图页面</h3><table><thead><tr><th>界面名称</th><th>url地址</th></tr></thead><tbody><tr><td>index.html</td><td>/home</td></tr><tr><td>table.html</td><td>/table</td></tr><tr><td>edit.html</td><td>/table/edit</td></tr></tbody></table><a id="more"></a><h3 id="2-安装相关模块插件"><a href="#2-安装相关模块插件" class="headerlink" title="2.安装相关模块插件"></a>2.安装相关模块插件</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm i -S express//安装组件</span><br><span class="line"></span><br><span class="line">npm i -S art-template</span><br><span class="line">npm i -S express-art-template//安装组件</span><br><span class="line"></span><br><span class="line">npm i -S body-parser//用于post获取数据</span><br><span class="line"></span><br><span class="line">npm i -g nodemon//全局安装，用于实时观察代码改动</span><br></pre></td></tr></table></figure><h3 id="3-建立node服务器"><a href="#3-建立node服务器" class="headerlink" title="3.建立node服务器"></a>3.建立node服务器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"开始监听"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)<span class="comment">//开启端口127.0.0.1:3000的服务</span></span><br></pre></td></tr></table></figure><h3 id="4-node中启用相关插件"><a href="#4-node中启用相关插件" class="headerlink" title="4.node中启用相关插件"></a>4.node中启用相关插件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> body = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/public'</span>,express.static(<span class="string">'./public/'</span>)) <span class="comment">//用于使用public目录中的js，css等</span></span><br><span class="line"></span><br><span class="line">app.engine(<span class="string">'html'</span>,<span class="built_in">require</span>(<span class="string">'express-art-template'</span>))</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded([extend:<span class="literal">false</span>]))</span><br><span class="line">app.use(bodyParser.json())</span><br></pre></td></tr></table></figure><h3 id="5-开启路由"><a href="#5-开启路由" class="headerlink" title="5.开启路由"></a>5.开启路由</h3><p>app.js端</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'./routers.js'</span>)</span><br><span class="line"></span><br><span class="line">app.use(router) <span class="comment">//导入router模块</span></span><br></pre></td></tr></table></figure><p>router端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var router = express.Router()</span><br></pre></td></tr></table></figure><h3 id="6-定义传递方式路径"><a href="#6-定义传递方式路径" class="headerlink" title="6.定义传递方式路径"></a>6.定义传递方式路径</h3><table><thead><tr><th>请求方式</th><th>传递路径</th><th>传递参数</th><th>备注</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="7-建立mongodb库"><a href="#7-建立mongodb库" class="headerlink" title="7.建立mongodb库"></a>7.建立mongodb库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var mongoose = require(&apos;mongoose&apos;)</span><br><span class="line"></span><br><span class="line">mongoose.connect(&apos;mongodb:localhost://....&apos;)</span><br><span class="line"></span><br><span class="line">var schema = mongoose.schema()</span><br><span class="line"></span><br><span class="line">var userSchema = new schema(&#123;</span><br><span class="line">data:&#123;&#123;options&#125;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">module.exports = mongooser.model(&quot;user&quot;,userSchema)</span><br></pre></td></tr></table></figure><h3 id="8-增删改查"><a href="#8-增删改查" class="headerlink" title="8.增删改查"></a>8.增删改查</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//请自行查询mongoose语法，例：</span><br><span class="line">var user = require(&apos;./model/user.js&apos;)</span><br><span class="line"></span><br><span class="line">router.get(&apos;/&apos;,function(req,res)&#123;</span><br><span class="line">user.find(function(err)&#123;</span><br><span class="line">if(err)&#123;</span><br><span class="line">consolo.log(err)</span><br><span class="line">&#125;</span><br><span class="line">res.render(&apos;index.html&apos;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-建立views视图页面&quot;&gt;&lt;a href=&quot;#1-建立views视图页面&quot; class=&quot;headerlink&quot; title=&quot;1.建立views视图页面&quot;&gt;&lt;/a&gt;1.建立views视图页面&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;界面名称&lt;/th&gt;
&lt;th&gt;url地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;index.html&lt;/td&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table.html&lt;/td&gt;
&lt;td&gt;/table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edit.html&lt;/td&gt;
&lt;td&gt;/table/edit&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="nodejs" scheme="http://ccblog.club/tags/nodejs/"/>
    
      <category term="mongodb" scheme="http://ccblog.club/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>markdown基本语法</title>
    <link href="http://ccblog.club/2019/09/15/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://ccblog.club/2019/09/15/markdown基本语法/</id>
    <published>2019-09-15T06:48:47.000Z</published>
    <updated>2019-09-15T06:51:37.293Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">链接</a></p><p><del>有链接我为什么要自己写？</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/191d1e21f7ed&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;有链接我为什么要自己写？&lt;/del&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="前端" scheme="http://ccblog.club/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://ccblog.club/tags/html/"/>
    
      <category term="语法基础" scheme="http://ccblog.club/tags/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>突然好想你-五月天</title>
    <link href="http://ccblog.club/2019/09/15/%E7%AA%81%E7%84%B6%E5%A5%BD%E6%83%B3%E4%BD%A0-%E4%BA%94%E6%9C%88%E5%A4%A9/"/>
    <id>http://ccblog.club/2019/09/15/突然好想你-五月天/</id>
    <published>2019-09-15T06:06:44.000Z</published>
    <updated>2019-09-15T06:46:53.937Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul><li>原链接</li><li>吉他谱</li><li>弹唱</li><li>总结</li></ul><h5 id="让我们开始吧"><a href="#让我们开始吧" class="headerlink" title="让我们开始吧"></a>让我们开始吧</h5><p>​    <a href="https://yoopu.me/view/g100Ay1J" target="_blank" rel="noopener">原谱链接</a></p><a id="more"></a><p><del>低音唱什么五月天？</del></p><p>​    </p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;原链接&lt;/li&gt;
&lt;li&gt;吉他谱&lt;/li&gt;
&lt;li&gt;弹唱&lt;/li&gt;
&lt;li&gt;总结&lt;/li&gt;
&lt;/ul&gt;&lt;h5 id=&quot;让我们开始吧&quot;&gt;&lt;a href=&quot;#让我们开始吧&quot; class=&quot;headerlink&quot; title=&quot;让我们开始吧&quot;&gt;&lt;/a&gt;让我们开始吧&lt;/h5&gt;&lt;p&gt;​    &lt;a href=&quot;https://yoopu.me/view/g100Ay1J&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原谱链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="吉他谱" scheme="http://ccblog.club/categories/%E5%90%89%E4%BB%96%E8%B0%B1/"/>
    
    
      <category term="有谱么" scheme="http://ccblog.club/tags/%E6%9C%89%E8%B0%B1%E4%B9%88/"/>
    
      <category term="弹唱" scheme="http://ccblog.club/tags/%E5%BC%B9%E5%94%B1/"/>
    
  </entry>
  
</feed>
